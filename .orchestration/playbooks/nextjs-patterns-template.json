{
  "playbook_version": "1.0.0",
  "project_type": "nextjs",
  "last_updated": "2025-10-24T00:00:00Z",
  "patterns": [
    {
      "id": "nextjs-pattern-001",
      "type": "helpful",
      "marker": "✓",
      "title": "App Router for Next.js 14+ Projects",
      "helpful_count": 0,
      "harmful_count": 0,
      "context": "New Next.js 14+ projects",
      "strategy": "Use nextjs-14-specialist with App Router architecture",
      "evidence": "Modern Next.js standard, better performance, streaming support (template)",
      "learned_from": [],
      "created_at": "2025-10-24T00:00:00Z"
    },
    {
      "id": "nextjs-pattern-002",
      "type": "helpful",
      "marker": "✓",
      "title": "Server Components by Default",
      "helpful_count": 0,
      "harmful_count": 0,
      "context": "Next.js 14 App Router development",
      "strategy": "Use react-18-specialist with Server Components as default, Client only when needed",
      "evidence": "Reduces bundle size, faster initial load, better SEO (template)",
      "learned_from": [],
      "created_at": "2025-10-24T00:00:00Z"
    },
    {
      "id": "nextjs-pattern-003",
      "type": "helpful",
      "marker": "✓",
      "title": "Async Server Components for Data Fetching",
      "helpful_count": 0,
      "harmful_count": 0,
      "context": "Server-side data fetching in App Router",
      "strategy": "Fetch data directly in async Server Components, avoid useEffect",
      "evidence": "Eliminates waterfalls, automatic request deduplication (template)",
      "learned_from": [],
      "created_at": "2025-10-24T00:00:00Z"
    },
    {
      "id": "nextjs-pattern-004",
      "type": "helpful",
      "marker": "✓",
      "title": "Route Handlers for API Endpoints",
      "helpful_count": 0,
      "harmful_count": 0,
      "context": "Backend API in Next.js 14 App Router",
      "strategy": "Use Route Handlers (route.ts) instead of API routes",
      "evidence": "Native to App Router, better TypeScript support, streaming responses (template)",
      "learned_from": [],
      "created_at": "2025-10-24T00:00:00Z"
    },
    {
      "id": "nextjs-pattern-005",
      "type": "helpful",
      "marker": "✓",
      "title": "Metadata API for SEO",
      "helpful_count": 0,
      "harmful_count": 0,
      "context": "SEO optimization in App Router",
      "strategy": "Use metadata exports and generateMetadata for dynamic SEO",
      "evidence": "Type-safe, supports streaming, better crawlability (template)",
      "learned_from": [],
      "created_at": "2025-10-24T00:00:00Z"
    },
    {
      "id": "nextjs-pattern-006",
      "type": "helpful",
      "marker": "✓",
      "title": "next/image for Automatic Optimization",
      "helpful_count": 0,
      "harmful_count": 0,
      "context": "Image-heavy Next.js applications",
      "strategy": "Always use next/image component, never raw <img> tags",
      "evidence": "Automatic WebP conversion, lazy loading, responsive sizes (template)",
      "learned_from": [],
      "created_at": "2025-10-24T00:00:00Z"
    },
    {
      "id": "nextjs-pattern-007",
      "type": "helpful",
      "marker": "✓",
      "title": "next/font for Font Optimization",
      "helpful_count": 0,
      "harmful_count": 0,
      "context": "Custom fonts in Next.js",
      "strategy": "Use next/font/google or next/font/local for font loading",
      "evidence": "Zero layout shift, automatic subsetting, self-hosted (template)",
      "learned_from": [],
      "created_at": "2025-10-24T00:00:00Z"
    },
    {
      "id": "nextjs-pattern-008",
      "type": "helpful",
      "marker": "✓",
      "title": "Streaming with Suspense Boundaries",
      "helpful_count": 0,
      "harmful_count": 0,
      "context": "Slow data fetching scenarios",
      "strategy": "Wrap slow components in Suspense, stream HTML progressively",
      "evidence": "Faster Time to First Byte, better perceived performance (template)",
      "learned_from": [],
      "created_at": "2025-10-24T00:00:00Z"
    },
    {
      "id": "nextjs-pattern-009",
      "type": "helpful",
      "marker": "✓",
      "title": "Server Actions for Mutations",
      "helpful_count": 0,
      "harmful_count": 0,
      "context": "Form submissions and data mutations",
      "strategy": "Use Server Actions with 'use server' directive for mutations",
      "evidence": "Type-safe, progressive enhancement, no API route needed (template)",
      "learned_from": [],
      "created_at": "2025-10-24T00:00:00Z"
    },
    {
      "id": "nextjs-pattern-010",
      "type": "helpful",
      "marker": "✓",
      "title": "Parallel Routes for Complex Layouts",
      "helpful_count": 0,
      "harmful_count": 0,
      "context": "Multi-panel dashboards or modals",
      "strategy": "Use @folder convention for parallel routes and slots",
      "evidence": "Independent loading states, better UX for complex layouts (template)",
      "learned_from": [],
      "created_at": "2025-10-24T00:00:00Z"
    },
    {
      "id": "nextjs-pattern-011",
      "type": "helpful",
      "marker": "✓",
      "title": "ISR for Dynamic but Cacheable Content",
      "helpful_count": 0,
      "harmful_count": 0,
      "context": "Content that updates periodically (blogs, product pages)",
      "strategy": "Use revalidate option for Incremental Static Regeneration",
      "evidence": "Static performance with dynamic updates, reduced origin load (template)",
      "learned_from": [],
      "created_at": "2025-10-24T00:00:00Z"
    },
    {
      "id": "nextjs-pattern-012",
      "type": "helpful",
      "marker": "✓",
      "title": "React 18 Hooks Optimization",
      "helpful_count": 0,
      "harmful_count": 0,
      "context": "Client Components with performance needs",
      "strategy": "Use react-18-specialist for useMemo, useCallback, useTransition",
      "evidence": "Prevents unnecessary re-renders, better perceived responsiveness (template)",
      "learned_from": [],
      "created_at": "2025-10-24T00:00:00Z"
    },
    {
      "id": "nextjs-pattern-013",
      "type": "helpful",
      "marker": "✓",
      "title": "Design System Integration",
      "helpful_count": 0,
      "harmful_count": 0,
      "context": "Next.js projects requiring design consistency",
      "strategy": "Use tailwind-specialist + design-system-architect for component libraries",
      "evidence": "Consistent UI, faster development, maintainable design tokens (template)",
      "learned_from": [],
      "created_at": "2025-10-24T00:00:00Z"
    },
    {
      "id": "nextjs-antipattern-001",
      "type": "harmful",
      "marker": "✗",
      "title": "Avoid Pages Router for New Projects",
      "helpful_count": 0,
      "harmful_count": 0,
      "context": "New Next.js 14+ projects",
      "strategy": "AVOID Pages Router, use App Router instead",
      "evidence": "Pages Router is legacy, lacks Server Components, streaming (template)",
      "learned_from": [],
      "created_at": "2025-10-24T00:00:00Z"
    },
    {
      "id": "nextjs-antipattern-002",
      "type": "harmful",
      "marker": "✗",
      "title": "Don't Overuse Client Components",
      "helpful_count": 0,
      "harmful_count": 0,
      "context": "App Router development",
      "strategy": "AVOID marking everything 'use client', default to Server Components",
      "evidence": "Increases bundle size, loses streaming benefits, worse performance (template)",
      "learned_from": [],
      "created_at": "2025-10-24T00:00:00Z"
    },
    {
      "id": "nextjs-antipattern-003",
      "type": "harmful",
      "marker": "✗",
      "title": "Avoid API Routes in App Router",
      "helpful_count": 0,
      "harmful_count": 0,
      "context": "Next.js 14 App Router",
      "strategy": "AVOID pages/api/* pattern, use Route Handlers instead",
      "evidence": "API routes don't support streaming, incompatible with App Router conventions (template)",
      "learned_from": [],
      "created_at": "2025-10-24T00:00:00Z"
    },
    {
      "id": "nextjs-antipattern-004",
      "type": "harmful",
      "marker": "✗",
      "title": "Don't Fetch in useEffect",
      "helpful_count": 0,
      "harmful_count": 0,
      "context": "Server-renderable data fetching",
      "strategy": "AVOID useEffect for data fetching, use async Server Components",
      "evidence": "Creates waterfalls, loses SSR benefits, worse Core Web Vitals (template)",
      "learned_from": [],
      "created_at": "2025-10-24T00:00:00Z"
    },
    {
      "id": "nextjs-neutral-001",
      "type": "neutral",
      "marker": "○",
      "title": "Pages Router for Migration Scenarios",
      "helpful_count": 0,
      "harmful_count": 0,
      "context": "Migrating existing Next.js 12-13 apps",
      "strategy": "Pages Router acceptable for gradual migration, not greenfield",
      "evidence": "Full rewrite expensive, incremental adoption safer (template)",
      "learned_from": [],
      "created_at": "2025-10-24T00:00:00Z"
    }
  ]
}
