{
  "playbook_version": "1.0.0",
  "project_type": "ios",
  "last_updated": "2025-10-24T00:00:00Z",
  "patterns": [
    {
      "id": "ios-pattern-001",
      "type": "helpful",
      "marker": "✓",
      "title": "SwiftUI + SwiftData + State-First for iOS 17+",
      "helpful_count": 0,
      "harmful_count": 0,
      "context": "iOS 17+ apps with local data persistence",
      "strategy": "Dispatch swiftui-developer + swiftdata-specialist + state-architect",
      "evidence": "Modern iOS development best practice, 30% faster than MVVM (template)",
      "learned_from": [],
      "created_at": "2025-10-24T00:00:00Z"
    },
    {
      "id": "ios-pattern-002",
      "type": "helpful",
      "marker": "✓",
      "title": "Design Review MANDATORY for Production Apps",
      "helpful_count": 0,
      "harmful_count": 0,
      "context": "iOS apps for App Store release",
      "strategy": "ALWAYS include design-reviewer in team composition",
      "evidence": "Catches HIG violations, visual bugs, spacing issues before QA (template)",
      "learned_from": [],
      "created_at": "2025-10-24T00:00:00Z"
    },
    {
      "id": "ios-pattern-003",
      "type": "helpful",
      "marker": "✓",
      "title": "Swift Testing Framework for iOS 17+",
      "helpful_count": 0,
      "harmful_count": 0,
      "context": "iOS 17+ projects",
      "strategy": "Use swift-testing-specialist (NOT xctest-pro)",
      "evidence": "Modern framework with Swift 6 support, better async testing (template)",
      "learned_from": [],
      "created_at": "2025-10-24T00:00:00Z"
    },
    {
      "id": "ios-pattern-004",
      "type": "helpful",
      "marker": "✓",
      "title": "URLSession with Async/Await for Networking",
      "helpful_count": 0,
      "harmful_count": 0,
      "context": "iOS 15+ apps with REST APIs",
      "strategy": "Use urlsession-expert with Swift async/await patterns",
      "evidence": "Cleaner than Combine, built-in, no dependencies (template)",
      "learned_from": [],
      "created_at": "2025-10-24T00:00:00Z"
    },
    {
      "id": "ios-pattern-005",
      "type": "helpful",
      "marker": "✓",
      "title": "Xcode Cloud for CI/CD Over Fastlane",
      "helpful_count": 0,
      "harmful_count": 0,
      "context": "iOS projects with continuous integration needs",
      "strategy": "Prefer xcode-cloud-expert over fastlane-specialist for modern projects",
      "evidence": "Native Xcode integration, simpler setup, Apple-maintained (template)",
      "learned_from": [],
      "created_at": "2025-10-24T00:00:00Z"
    },
    {
      "id": "ios-pattern-006",
      "type": "helpful",
      "marker": "✓",
      "title": "Observation Framework Over Combine",
      "helpful_count": 0,
      "harmful_count": 0,
      "context": "iOS 17+ with state observation needs",
      "strategy": "Use observation-specialist with @Observable macro",
      "evidence": "Simpler than Combine, better compiler support (template)",
      "learned_from": [],
      "created_at": "2025-10-24T00:00:00Z"
    },
    {
      "id": "ios-pattern-007",
      "type": "helpful",
      "marker": "✓",
      "title": "UI Testing with Accessibility IDs",
      "helpful_count": 0,
      "harmful_count": 0,
      "context": "iOS apps requiring UI automation",
      "strategy": "Use ui-testing-expert with accessibility-based selectors",
      "evidence": "More reliable than view hierarchy queries (template)",
      "learned_from": [],
      "created_at": "2025-10-24T00:00:00Z"
    },
    {
      "id": "ios-pattern-008",
      "type": "helpful",
      "marker": "✓",
      "title": "SwiftData for iOS 17+, Core Data for iOS 16",
      "helpful_count": 0,
      "harmful_count": 0,
      "context": "Choosing data persistence layer",
      "strategy": "iOS 17+: swiftdata-specialist | iOS 16: coredata-expert",
      "evidence": "SwiftData is modern but iOS 17+ only (template)",
      "learned_from": [],
      "created_at": "2025-10-24T00:00:00Z"
    },
    {
      "id": "ios-pattern-009",
      "type": "helpful",
      "marker": "✓",
      "title": "Swift Code Review Before Quality Validator",
      "helpful_count": 0,
      "harmful_count": 0,
      "context": "All iOS projects",
      "strategy": "Always dispatch swift-code-reviewer before quality-validator",
      "evidence": "Catches Swift-specific issues (concurrency, optionals) early (template)",
      "learned_from": [],
      "created_at": "2025-10-24T00:00:00Z"
    },
    {
      "id": "ios-pattern-010",
      "type": "helpful",
      "marker": "✓",
      "title": "VoiceOver Testing for Accessibility",
      "helpful_count": 0,
      "harmful_count": 0,
      "context": "Production iOS apps",
      "strategy": "Include ios-accessibility-tester for VoiceOver compliance",
      "evidence": "App Store requires accessibility, catches issues before rejection (template)",
      "learned_from": [],
      "created_at": "2025-10-24T00:00:00Z"
    },
    {
      "id": "ios-pattern-011",
      "type": "helpful",
      "marker": "✓",
      "title": "State-First Architecture Over MVVM",
      "helpful_count": 0,
      "harmful_count": 0,
      "context": "New iOS 17+ projects",
      "strategy": "Use state-architect for state-first patterns, not traditional MVVM",
      "evidence": "Aligns with SwiftUI's declarative nature, less boilerplate (template)",
      "learned_from": [],
      "created_at": "2025-10-24T00:00:00Z"
    },
    {
      "id": "ios-pattern-012",
      "type": "helpful",
      "marker": "✓",
      "title": "Performance Profiling with Instruments",
      "helpful_count": 0,
      "harmful_count": 0,
      "context": "Apps with performance concerns",
      "strategy": "Use ios-performance-engineer to profile with Instruments",
      "evidence": "Identifies CPU, memory, energy bottlenecks (template)",
      "learned_from": [],
      "created_at": "2025-10-24T00:00:00Z"
    },
    {
      "id": "ios-pattern-013",
      "type": "helpful",
      "marker": "✓",
      "title": "Security Testing for Sensitive Data",
      "helpful_count": 0,
      "harmful_count": 0,
      "context": "Apps handling passwords, financial data",
      "strategy": "Include ios-security-tester for Keychain, biometric auth validation",
      "evidence": "Prevents data leaks, ensures proper encryption (template)",
      "learned_from": [],
      "created_at": "2025-10-24T00:00:00Z"
    },
    {
      "id": "ios-pattern-014",
      "type": "helpful",
      "marker": "✓",
      "title": "TCA for Complex Apps with Deep State",
      "helpful_count": 0,
      "harmful_count": 0,
      "context": "Complex iOS apps (banking, e-commerce)",
      "strategy": "Use tca-specialist for The Composable Architecture",
      "evidence": "Provides predictable state management for complex flows (template)",
      "learned_from": [],
      "created_at": "2025-10-24T00:00:00Z"
    },
    {
      "id": "ios-pattern-015",
      "type": "helpful",
      "marker": "✓",
      "title": "Parallel Specialist Dispatch for Independent Work",
      "helpful_count": 0,
      "harmful_count": 0,
      "context": "Tasks with independent UI and networking",
      "strategy": "Dispatch swiftui-developer + urlsession-expert in parallel",
      "evidence": "Reduces orchestration time by 40% for independent tasks (template)",
      "learned_from": [],
      "created_at": "2025-10-24T00:00:00Z"
    },
    {
      "id": "ios-antipattern-001",
      "type": "harmful",
      "marker": "✗",
      "title": "Avoid XCTest for iOS 17+ Projects",
      "helpful_count": 0,
      "harmful_count": 0,
      "context": "iOS 17+ projects",
      "strategy": "AVOID using xctest-pro instead of swift-testing-specialist",
      "evidence": "XCTest lacks modern Swift 6 features, harder async testing (template)",
      "learned_from": [],
      "created_at": "2025-10-24T00:00:00Z"
    },
    {
      "id": "ios-antipattern-002",
      "type": "harmful",
      "marker": "✗",
      "title": "Avoid Combine for New Projects",
      "helpful_count": 0,
      "harmful_count": 0,
      "context": "iOS 17+ projects",
      "strategy": "AVOID combine-networking, use Swift async/await instead",
      "evidence": "Combine is legacy, async/await is simpler and native (template)",
      "learned_from": [],
      "created_at": "2025-10-24T00:00:00Z"
    },
    {
      "id": "ios-antipattern-003",
      "type": "harmful",
      "marker": "✗",
      "title": "Don't Skip Design Review for Production",
      "helpful_count": 0,
      "harmful_count": 0,
      "context": "Apps intended for App Store",
      "strategy": "AVOID omitting design-reviewer to save time",
      "evidence": "Leads to App Store rejections for HIG violations (template)",
      "learned_from": [],
      "created_at": "2025-10-24T00:00:00Z"
    },
    {
      "id": "ios-antipattern-004",
      "type": "harmful",
      "marker": "✗",
      "title": "Avoid UIKit for New iOS 17+ Apps",
      "helpful_count": 0,
      "harmful_count": 0,
      "context": "New iOS 17+ projects without legacy constraints",
      "strategy": "AVOID uikit-specialist, use swiftui-developer instead",
      "evidence": "UIKit is legacy, SwiftUI is the future, easier development (template)",
      "learned_from": [],
      "created_at": "2025-10-24T00:00:00Z"
    },
    {
      "id": "ios-antipattern-005",
      "type": "harmful",
      "marker": "✗",
      "title": "Don't Use Core Data for iOS 17+ New Projects",
      "helpful_count": 0,
      "harmful_count": 0,
      "context": "New iOS 17+ projects",
      "strategy": "AVOID coredata-expert, use swiftdata-specialist instead",
      "evidence": "SwiftData is simpler, better Swift integration (template)",
      "learned_from": [],
      "created_at": "2025-10-24T00:00:00Z"
    },
    {
      "id": "ios-neutral-001",
      "type": "neutral",
      "marker": "○",
      "title": "TCA Overkill for Simple Apps",
      "helpful_count": 0,
      "harmful_count": 0,
      "context": "Simple calculator, notes apps",
      "strategy": "tca-specialist adds complexity; state-architect may suffice",
      "evidence": "TCA powerful but heavy for simple state (template)",
      "learned_from": [],
      "created_at": "2025-10-24T00:00:00Z"
    },
    {
      "id": "ios-neutral-002",
      "type": "neutral",
      "marker": "○",
      "title": "Fastlane vs Xcode Cloud Trade-offs",
      "helpful_count": 0,
      "harmful_count": 0,
      "context": "CI/CD choice for teams",
      "strategy": "fastlane-specialist for complex pipelines, xcode-cloud-expert for simplicity",
      "evidence": "Fastlane more flexible, Xcode Cloud easier (template)",
      "learned_from": [],
      "created_at": "2025-10-24T00:00:00Z"
    },
    {
      "id": "ios-neutral-003",
      "type": "neutral",
      "marker": "○",
      "title": "UIKit for Legacy Support",
      "helpful_count": 0,
      "harmful_count": 0,
      "context": "Apps supporting iOS 14-15",
      "strategy": "uikit-specialist required for older iOS versions",
      "evidence": "SwiftUI limited on iOS 14-15, UIKit necessary (template)",
      "learned_from": [],
      "created_at": "2025-10-24T00:00:00Z"
    },
    {
      "id": "ios-neutral-004",
      "type": "neutral",
      "marker": "○",
      "title": "Combine for Existing Codebases",
      "helpful_count": 0,
      "harmful_count": 0,
      "context": "Maintaining existing Combine-based apps",
      "strategy": "combine-networking appropriate for legacy maintenance",
      "evidence": "Don't rewrite working Combine code, maintain consistency (template)",
      "learned_from": [],
      "created_at": "2025-10-24T00:00:00Z"
    },
    {
      "id": "ios-neutral-005",
      "type": "neutral",
      "marker": "○",
      "title": "Core Data for Complex Migrations",
      "helpful_count": 0,
      "harmful_count": 0,
      "context": "Apps with existing Core Data stores",
      "strategy": "coredata-expert appropriate for migration scenarios",
      "evidence": "SwiftData migration from Core Data requires careful planning (template)",
      "learned_from": [],
      "created_at": "2025-10-24T00:00:00Z"
    }
  ]
}
